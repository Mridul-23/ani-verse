name: Repo Visualizer

on:
  push:
    branches:
      - main

jobs:
  generate-diagram:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Generate repo visualization
      - name: Generate repo visualization
        uses: githubocto/repo-visualizer@0.9.1
        with:
          output_file: repo-diagram.svg

      # 3. Upload artifact (optional but good for debugging)
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: repo-diagram
          path: repo-diagram.svg
          retention-days: 30

      # 4. Create or update Pull Request
      # This single action will handle creating a new branch, committing the
      # diagram file, and opening a pull request against the main branch.
      - name: Create or update Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          # The user identity for the commit
          author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          
          # The branch to create the PR from
          branch: repo-visualizer-update
          
          # The commit message
          commit-message: "chore(diagram): update repo visualization"
          
          # The title of the Pull Request
          title: "chore: update repo visualization"
          
          # The body of the Pull Request
          body: |
            This PR automatically updates the repo visualization diagram.
            The diagram was generated by the [Repo Visualizer](https://github.com/githubocto/repo-visualizer) action.
          
          # Labels to add to the Pull Request
          labels: |
            automated
            visualization
            
          # Set to false to create a ready-for-review PR
          draft: false
